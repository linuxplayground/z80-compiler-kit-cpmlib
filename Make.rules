AS=/opt/fcc/bin/asz80
AR=/usr/bin/ar
CC=/opt/fcc/bin/fcc
CPP=/usr/bin/cpp -undef -nostdinc
#CPP=${HOME}/thirdparty/Fuzix-Compiler-Kit/cpp
LD=/opt/fcc/bin/ldz80
LORDER=/opt/fcc/bin/lorderz80

CFLAGS=-mz80 -O2
CPPFLAGS=-I$(INCLUDES) -I$(TOP)/include -D$(ARCH)
LDFLAGS=-b -C0x100
BUILD_DIR=$(TOP)/build/arch/$(ARCH)
# can't use BUILD_DIR here because examples might override it.
LDLIBS=$(TOP)/build/arch/$(ARCH)/libcpm.a /opt/fcc/lib/z80/libc.a /opt/fcc/lib/z80/libz80.a

SRC_S=$(wildcard $(TOP)/asm/*.S)
SRC_s=$(patsubst $(TOP)/asm/%.o, $(BUILD_DIR)/%.s, $(SRC_S))
OBJ_S=$(patsubst $(TOP)/asm/%.S, $(BUILD_DIR)/%.o, $(SRC_S))

SRC_C=$(wildcard $(TOP)/libsrc/*.c)
OBJ_C=$(patsubst $(TOP)/libsrc/%.c, $(BUILD_DIR)/%.o, $(SRC_C))

OBJS=\
		 $(OBJ_S) \
		 $(OBJ_C)


.PHONY: all world

all::

$(BUILD_DIR)/%.s: $(TOP)/asm/%.S
	@mkdir -p $$(dirname $@)
	$(CPP) $(CPPFLAGS) -o $@ $^

$(BUILD_DIR)/%.o: $(TOP)/libsrc/%.c
	@mkdir -p $$(dirname $@)
	$(CC) $(CFLAGS) $(CPPFLAGS) -c -o $@ $^

$(BUILD_DIR)/%.o: $(BUILD_DIR)/%.s
	@mkdir -p $$(dirname $@)
	$(CC) $(CFLAGS) $(CPPFLAGS) -c -o $@ $^

world:: clean all
# vim: set ft=make noet:
